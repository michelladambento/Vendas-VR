/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.michell.vendas.vr.views;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import com.michell.vendas.vr.dtos.ProductDTO;
import com.michell.vendas.vr.dtos.ResponseDTO;

import com.michell.vendas.vr.dtos.RetrieveAllProductsDTO;
import java.awt.HeadlessException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.HttpServerErrorException;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

/**
 *
 * @author michell-bento
 */
public class RegisterPurchaserOrderForm extends javax.swing.JInternalFrame {
    
    private static final String PURCHASER_ORDER_URL = "http://localhost:8080/purchaserOrder/";

    /**
     * Creates new form RegisterProductForm
     */
    public RegisterPurchaserOrderForm() {
        initComponents();
//        loadProducts(); 
    }
    
//      public void clearFields(){
//        inputCode.setText(null);
//        inputDescription.setText(null);
//        inputPrice.setText(null);
//        tableProduct.clearSelection();
//    }
//    
//    public void setInitNewFields(){
//        inputCode.setEnabled(false);
//        inputDescription.setEnabled(true);
//        inputPrice.setEnabled(true);      
//        inputSearchProduct.setEnabled(true);
//
//        btnDeleteProduct.setEnabled(false);
//        btnCancelProduct.setEnabled(true);
//        btnUpdateProduct.setEnabled(false);
//        btnSaveProduct.setEnabled(true);
//        btnNewProduct.setEnabled(false);
//    }
//    
//    public void setInitSaveFields(){
//        inputCode.setEnabled(false);
//        inputDescription.setEnabled(false);
//        inputPrice.setEnabled(false);
//        inputSearchProduct.setEnabled(false);
//
//        btnDeleteProduct.setEnabled(false);
//        btnCancelProduct.setEnabled(false);
//        btnUpdateProduct.setEnabled(false);
//        btnSaveProduct.setEnabled(false);
//        btnNewProduct.setEnabled(true);  
//        
//    }
//    
//    public void setInitEditFields(){
//        inputCode.setEnabled(false);
//        inputDescription.setEnabled(true);
//        inputPrice.setEnabled(true);
//        inputSearchProduct.setEnabled(true);
//        
//        btnDeleteProduct.setEnabled(true);
//        btnCancelProduct.setEnabled(true);
//        btnUpdateProduct.setEnabled(true);
//        btnSaveProduct.setEnabled(false);
//        btnNewProduct.setEnabled(false);
//    }
     
//    public void setInitCancelFields(){
//         setInitSaveFields();
//    }
    
//    public void loadProducts(){
//        RestTemplate restTemplate = new RestTemplate();
//
//        RetrieveAllProductsDTO productsDto = restTemplate.exchange(PRODUCT_URL,
//            HttpMethod.GET,
//            null,
//            new ParameterizedTypeReference<RetrieveAllProductsDTO>() {}
//        ).getBody();
//        
//        if (productsDto != null) {
//                DefaultTableModel tableModelCustomers = (DefaultTableModel) tableProduct.getModel();
//                tableModelCustomers.setRowCount(0); //limpa os dados
//                for (ProductDTO product : productsDto.getProducts()) {                    
//                    Long id = product.getId();
//                    String description = product.getDescription();
//                    Double price = product.getPrice();
//                    tableModelCustomers.addRow(new Object[]{id, description, price});
//                }
//        }      
//    }
//      
//    private String extractErrorMessage(String responseBody) {
//        ObjectMapper objectMapper = new ObjectMapper();
//        try {
//            JsonNode root = objectMapper.readTree(responseBody);
//            JsonNode messageNode = root.path("message");
//            return messageNode.path("details").asText();
//        } catch (IOException e) {
//            return "Erro ao processar mensagem de erro: " + e.getMessage();
//        }
//    } 

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCustomer = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnDeleteProduct = new javax.swing.JButton();
        btnCancelProduct = new javax.swing.JButton();
        btnUpdateProduct = new javax.swing.JButton();
        btnSaveProduct = new javax.swing.JButton();
        btnNewProduct = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        inputSearchProduct = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCustomer1 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableCustomer2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        inputCustomerName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableCustomer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome do cliente", "Limite de compra", "Data de fechamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCustomer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomerMouseClicked(evt);
            }
        });
        tableCustomer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableCustomerKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableCustomerKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableCustomer);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        setClosable(true);
        setIconifiable(true);
        setTitle("VR Software");
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/vr-icon-32.png"))); // NOI18N

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setForeground(new java.awt.Color(255, 153, 0));

        jLabel5.setBackground(new java.awt.Color(102, 102, 102));
        jLabel5.setFont(new java.awt.Font("Liberation Sans", 0, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Cadastro de Pedido de Compra");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnDeleteProduct.setBackground(new java.awt.Color(255, 153, 102));
        btnDeleteProduct.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnDeleteProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trash-icon-vr.png"))); // NOI18N
        btnDeleteProduct.setText("Excluir");
        btnDeleteProduct.setEnabled(false);
        btnDeleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteProductActionPerformed(evt);
            }
        });

        btnCancelProduct.setBackground(new java.awt.Color(255, 153, 102));
        btnCancelProduct.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnCancelProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/clear-icon-vr.png"))); // NOI18N
        btnCancelProduct.setText("Cancelar");
        btnCancelProduct.setEnabled(false);
        btnCancelProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelProductActionPerformed(evt);
            }
        });

        btnUpdateProduct.setBackground(new java.awt.Color(255, 153, 102));
        btnUpdateProduct.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnUpdateProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/pencil-icon-vr.png"))); // NOI18N
        btnUpdateProduct.setText("Atualizar");
        btnUpdateProduct.setEnabled(false);
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });

        btnSaveProduct.setBackground(new java.awt.Color(255, 153, 0));
        btnSaveProduct.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        btnSaveProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save-icon-3d-vr.png"))); // NOI18N
        btnSaveProduct.setText("Salvar");
        btnSaveProduct.setEnabled(false);
        btnSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProductActionPerformed(evt);
            }
        });

        btnNewProduct.setBackground(new java.awt.Color(255, 153, 0));
        btnNewProduct.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        btnNewProduct.setForeground(new java.awt.Color(255, 255, 255));
        btnNewProduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/plus-icon-vr.png"))); // NOI18N
        btnNewProduct.setText("Adicionar Cliente");
        btnNewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnSaveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnCancelProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnNewProduct, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSaveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDeleteProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCancelProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(btnUpdateProduct, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnNewProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel1.setText("Pesquisa pelo nome do cliente");

        inputSearchProduct.setEnabled(false);
        inputSearchProduct.setRequestFocusEnabled(false);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search-icon-vr.png"))); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(inputSearchProduct))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(4, 4, 4)))
                .addComponent(inputSearchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableCustomer1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome do cliente", "Limite de compra", "Data de fechamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCustomer1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomer1MouseClicked(evt);
            }
        });
        tableCustomer1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableCustomer1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableCustomer1KeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tableCustomer1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tableCustomer2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ³digo", "Nome do cliente", "Limite de compra", "Data de fechamento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableCustomer2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCustomer2MouseClicked(evt);
            }
        });
        tableCustomer2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tableCustomer2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableCustomer2KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tableCustomer2);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        inputCustomerName.setText("Michell Adam Bento");
        inputCustomerName.setEnabled(false);
        inputCustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputCustomerNameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Limite de compra ");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel4.setText("Data de fechamento");

        jLabel8.setFont(new java.awt.Font("Liberation Sans", 2, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("06/07/2024");

        jLabel9.setFont(new java.awt.Font("Liberation Sans", 1, 52)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("R$ 200,00");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(140, 140, 140))))
                    .addComponent(inputCustomerName))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(inputCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteProductActionPerformed
//        DefaultTableModel model = (DefaultTableModel)tableProduct.getModel();
//        int selectedRowIndex = tableProduct.getSelectedRow();
//        int qtdRows = tableProduct.getSelectedRowCount();
//        
//        
//        if(qtdRows == 1){
//            int response = JOptionPane.showConfirmDialog(
//                    this,
//                    "VocÃª tem a certeza que deseja excluir esse produto?",
//                    "Confirmar ExclusÃ£o de Produto",
//                    JOptionPane.YES_NO_OPTION,
//                    2,
//                    null                  
//                    );
//            if (response == JOptionPane.YES_OPTION){
//                setInitEditFields();
//                Long productId = Long.parseLong(model.getValueAt(selectedRowIndex, 0).toString());
//                RestTemplate restTemplate = new RestTemplate();
//                String urlDelete = PRODUCT_URL + productId + "/";
//                
//                  try {
//                        ResponseEntity<ResponseDTO> responseEntity = restTemplate.exchange(
//                            urlDelete,
//                            HttpMethod.DELETE,
//                            HttpEntity.EMPTY,
//                            ResponseDTO.class
//                        );
//                        ResponseDTO deleteResponse = responseEntity.getBody();
//                        JOptionPane.showMessageDialog(this, deleteResponse.getMessage().getDetails());
//                        loadProducts();
//                        setInitSaveFields();
//                        clearFields();
//                    } catch (HttpServerErrorException e) {
//                        String errorMessage = extractErrorMessage(e.getResponseBodyAsString());
//                        JOptionPane.showMessageDialog(this, errorMessage, "Aviso de busca", JOptionPane.WARNING_MESSAGE);
//                    } catch (HeadlessException | RestClientException e) {
//                        JOptionPane.showMessageDialog(this, "Erro inesperado: " + e.getMessage());
//                    } 
//            }
//        }if(qtdRows > 1){
//            JOptionPane.showMessageDialog(this, "Por favor selecione apenas um registro");
//        }
    }//GEN-LAST:event_btnDeleteProductActionPerformed

    private void btnCancelProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelProductActionPerformed
//          setInitCancelFields();
//           clearFields();
    }//GEN-LAST:event_btnCancelProductActionPerformed

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
//        // TODO add your handling code here:
//        int selectedRowIndex = tableProduct.getSelectedRow();
//        int qtdRows = tableProduct.getSelectedRowCount();
//        if(qtdRows == 1){
//            DefaultTableModel model = (DefaultTableModel)tableProduct.getModel();
//            setInitEditFields();
//            Long productIdToUpdate = Long.parseLong(model.getValueAt(selectedRowIndex, 0).toString());
//            RestTemplate restTemplate = new RestTemplate();
//            
//            
//            ProductDTO productDTO = new ProductDTO();
//            productDTO.setId(productIdToUpdate);
//            productDTO.setDescription(inputDescription.getText());
//            productDTO.setPrice(Double.parseDouble(inputPrice.getText()));
//            
//            HttpHeaders headers = new HttpHeaders();
//            headers.setContentType(org.springframework.http.MediaType.APPLICATION_JSON);
//            
//            HttpEntity<ProductDTO> request = new HttpEntity<>(productDTO, headers);
//            try {
//            
//                ResponseEntity<ResponseDTO> response = restTemplate.exchange(
//                PRODUCT_URL,
//                HttpMethod.PUT,
//                request,
//                ResponseDTO.class
//            ); 
//
//            JOptionPane.showMessageDialog(this, response.getBody().getMessage().getDetails());
//            loadProducts();
//            setInitSaveFields();
//            clearFields();
//            
//            } catch (HttpServerErrorException e) {
//                String errorMessage = extractErrorMessage(e.getResponseBodyAsString());
//                JOptionPane.showMessageDialog(this, errorMessage, "Aviso de cliente nÃ£o encontrado", JOptionPane.WARNING_MESSAGE);
//            } catch (HeadlessException | RestClientException e) {
//                JOptionPane.showMessageDialog(this, "Erro inesperado: " + e.getMessage());
//            }    
//
//        }if(qtdRows > 1){
//            JOptionPane.showMessageDialog(this, "Por favor selecione apenas um registro");
//        }
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    private void btnSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProductActionPerformed
//        RestTemplate restTemplate = new RestTemplate();
//        ProductDTO productDTO = new ProductDTO();
//        productDTO.setDescription(inputDescription.getText());
//        productDTO.setPrice(Double.parseDouble(inputPrice.getText()));
//        HttpHeaders headers = new HttpHeaders();
//        headers.setContentType(org.springframework.http.MediaType.APPLICATION_JSON);
//        HttpEntity<ProductDTO> request = new HttpEntity<>(productDTO, headers);
//        try {
//            
//                ResponseEntity<ResponseDTO> response = restTemplate.exchange(
//                PRODUCT_URL,
//                HttpMethod.POST,
//                request,
//                ResponseDTO.class
//            ); 
//
//            JOptionPane.showMessageDialog(this, response.getBody().getMessage().getDetails());
//            loadProducts();
//            setInitSaveFields();
//            clearFields();
//            
//        } catch (HttpServerErrorException e) {
//            String errorMessage = extractErrorMessage(e.getResponseBodyAsString());
//            JOptionPane.showMessageDialog(this, errorMessage, "Aviso de cliente jÃ¡ existente", JOptionPane.WARNING_MESSAGE);
//        } catch (HeadlessException | RestClientException e) {
//            JOptionPane.showMessageDialog(this, "Erro inesperado: " + e.getMessage());
//        }       
    }//GEN-LAST:event_btnSaveProductActionPerformed

    private void btnNewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewProductActionPerformed
        // TODO add your handling code here:
//        setInitNewFields();
    }//GEN-LAST:event_btnNewProductActionPerformed

    private void tableCustomerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomerMouseClicked
        // TODO add your handling code here:
//        DefaultTableModel model = (DefaultTableModel)tableCustomer.getModel();
//        int selectedRowIndex = tableCustomer.getSelectedRow();
//        int qtdRows = tableCustomer.getSelectedRowCount();
//
//        System.out.println("selectedRowIndex:" + selectedRowIndex);
//        System.out.println("qtdRows:" + qtdRows);
//
//        if(qtdRows == 1){
//            setInitEditFields();
//            inputCode.setText(model.getValueAt(selectedRowIndex, 0).toString());
//            inputCustomerName.setText(model.getValueAt(selectedRowIndex, 1).toString());
//            inputPurchaseLimit.setText(model.getValueAt(selectedRowIndex, 2).toString());
//            String inputClosingDateAmerican = model.getValueAt(selectedRowIndex, 3).toString();
//            try {
//                SimpleDateFormat inputFormat = new SimpleDateFormat("dd/MM/yyyy");
//                Date date = inputFormat.parse(inputClosingDateAmerican);
//                inputClosingDate.setDate(date);
//                //                    inputClosingDate.setDateFormatString("dd/MM/yyyy");
//
//            } catch (ParseException ex) {
//                ex.printStackTrace();
//            }
//        }if(qtdRows > 1){
//            JOptionPane.showMessageDialog(this, "Por favor selecione apenas um registro");
//
//        }
    }//GEN-LAST:event_tableCustomerMouseClicked

    private void tableCustomerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableCustomerKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_tableCustomerKeyPressed

    private void tableCustomerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableCustomerKeyReleased
//        System.out.println("aqui");
//        DefaultTableModel model = (DefaultTableModel)tableCustomer.getModel();
//        int selectedRowIndex = tableCustomer.getSelectedRow();
//        int qtdRows = tableCustomer.getSelectedRowCount();
//        System.out.println("selectedRowIndex:" + selectedRowIndex);
//        System.out.println("qtdRows:" + qtdRows);
//        if(qtdRows == 1){
//            setInitEditFields();
//            inputCode.setText(model.getValueAt(selectedRowIndex, 0).toString());
//            inputCustomerName.setText(model.getValueAt(selectedRowIndex, 1).toString());
//            inputPurchaseLimit.setText(model.getValueAt(selectedRowIndex, 2).toString());
//            String inputClosingDateAmerican = model.getValueAt(selectedRowIndex, 3).toString();
//            try {
//                SimpleDateFormat inputFormat = new SimpleDateFormat("dd/MM/yyyy");
//                Date date = inputFormat.parse(inputClosingDateAmerican);
//                inputClosingDate.setDate(date);
//                //                    inputClosingDate.setDateFormatString("dd/MM/yyyy");
//
//            } catch (ParseException ex) {
//                ex.printStackTrace();
//            }
//        }if(qtdRows > 1){
//            JOptionPane.showMessageDialog(this, "Por favor selecione apenas um registro");
//
//        }
    }//GEN-LAST:event_tableCustomerKeyReleased

    private void tableCustomer1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomer1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableCustomer1MouseClicked

    private void tableCustomer1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableCustomer1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableCustomer1KeyPressed

    private void tableCustomer1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableCustomer1KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tableCustomer1KeyReleased

    private void tableCustomer2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCustomer2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableCustomer2MouseClicked

    private void tableCustomer2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableCustomer2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tableCustomer2KeyPressed

    private void tableCustomer2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableCustomer2KeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tableCustomer2KeyReleased

    private void inputCustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputCustomerNameActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_inputCustomerNameActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelProduct;
    private javax.swing.JButton btnDeleteProduct;
    private javax.swing.JButton btnNewProduct;
    private javax.swing.JButton btnSaveProduct;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JTextField inputCustomerName;
    private javax.swing.JTextField inputSearchProduct;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tableCustomer;
    private javax.swing.JTable tableCustomer1;
    private javax.swing.JTable tableCustomer2;
    // End of variables declaration//GEN-END:variables
}
